rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 👤 User Profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // 📝 Notes
    match /notes/{noteId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // ✅ Tasks
    match /tasks/{taskId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // ✅ Candidates
    match /candidates/{candidateId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // 🔔 Notifications
  match /notifications/{notificationId} {
  allow read: if request.auth != null &&
    (!('userId' in resource.data) || request.auth.uid == resource.data.userId);
  allow create: if request.auth.token.admin == true;
}

    // 🔒 Fallback: diğer koleksiyonlara erişim engellenir
    match /{document=**} {
      allow read, write: if false;
    }
  }
}